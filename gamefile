from pygame import *
from random import *
from time import time as timer 

WIDTH = 700
HEIGHT = 500
FPS = 60

mixer.init()
mixer.music.load('space.ogg')
mixer.music.play()
fire_sound = mixer.Sound('fire.ogg')
clock = time.Clock()

display.set_caption("Shooter")
window = display.set_mode((WIDTH, HEIGHT))
background = transform.scale(image.load("galaxy.jpg"), (WIDTH, HEIGHT))

class GameSprite(sprite.Sprite):
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        sprite.Sprite.__init__(self)
        self.image = transform.scale(image.load(player_image), (size_x, size_y))
        self.speed = player_speed
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y

    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))


class Player(GameSprite):
    def update(self):
        keys = key.get_pressed()
        if keys[K_LEFT] and self.rect.x > 5:
            self.rect.x -= self.speed
        if keys[K_RIGHT] and self.rect.x < WIDTH - 80:
            self.rect.x += self.speed

    def fire(self):
        bullet = Bullet("bullet.png", self.rect.centerx, self.rect.top, 15, 20, -15)
        bullets.add(bullet)

class Enemy(GameSprite):
    def update(self):
        self.rect.y += self.speed
        global lost
        if self.rect.y > HEIGHT:
            self.rect.x = randint(80, WIDTH - 80)
            self.rect.y = 0
            lost += 1

class Bullet(GameSprite):
    def update(self):
        self.rect.y += self.speed
        if self.rect.y < 0:
            self.kill()

lost = 0
score = 0
max_lost = 10
goal = 20
life = 3
last_time = 0

ship = Player("rocket.png", 5, HEIGHT - 100, 80, 100, 10)
bullets = sprite.Group()
monsters = sprite.Group()

for i in range(1, 6):
    monster = Enemy("ufo.png", randint(80, WIDTH - 80), -40, 80, 50, randint(1, 5))
    monsters.add(monster)

asteroids = sprite.Group()
for i in range(1, 3):
    asteroid = Enemy("asteroid.png", randint(30, WIDTH - 30), -40, 80, 50, randint(1, 7))
    asteroids.add(asteroid)

font.init()
font2 = font.Font(None, 36)
win = font2.render("YOU WIN!", True, (255, 255, 255))
lose = font2.render("YOU LOSE!", True, (180, 0, 0))

rel_time = True
num_fire = 0    
finish = False
run = True 

while run:
    for e in event.get():
        if e.type == QUIT:
            run = False
        if e.type == KEYDOWN:
            if e.key == K_SPACE:
                if num_fire < 5 and not rel_time:
                    num_fire += 1
                    fire_sound.play()
                    ship.fire()

                if num_fire >= 5 and not rel_time:
                    last_time = timer()
                    rel_time = True

    if not finish:
        window.blit(background,(0,0))
        text_score = font2.render("Счёт: " + str(score), 1, (255, 255, 255))
        window.blit(text_score, (10, 20))

        text = font2.render("Пропущено: " + str(lost), 1, (255, 255, 255))
        window.blit(text, (10, 50))

        ship.update()
        asteroids.update()
        monsters.update()
        bullets.update()

        ship.reset()
        asteroids.draw(window)
        monsters.draw(window)
        bullets.draw(window)

        if rel_time:
            now_time = timer()

            if now_time - last_time < 3:
                reloaded = font2.render("wait, reload...", True, (150, 0, 0))
                window.blit(reloaded, (260, 460))
            else:
                num_fire = 0
                rel_time = False


        collides = sprite.groupcollide(monsters, bullets, True, True)
        for c in collides:
            score += 1
            monster = Enemy("ufo.png", randint(80, WIDTH-80), -40, 80, 50, randint(1, 5))
            monsters.add(monster)

        if sprite.spritecollide(ship, monsters, False) or sprite.spritecollide(ship, asteroids, False):
            sprite.spritecollide(ship, monsters, True)
            sprite.spritecollide(ship, asteroids, True)
            life -= 1

        if life == 0 or lost >= max_lost:
            finish = True
            mixer.music.stop()
            window.blit(lose, (200, 200))

        if score >= goal:
            finish = True
            mixer.music.stop()
            window.blit(win, (200, 200))
        
        if life == 3:
            life_color = (0, 150, 0)
        if life == 2:
            life_color = (150, 150, 0)
        if life == 1:
            life_color = (150, 0, 0)

        text_life = font2.render(str(life), 1, life_color)
        window.blit(text_life, (650, 10))

        display.update()
    else:
        finish = False
        score = 0
        lost = 0
        num_fire = 0
        life = 3
        for bullet in bullets:
            bullet.kill()
        for monster in monsters:
            monster.kill()
        for asteroid in asteroids:
            asteroid.kill()

        time.delay(3000)
        for i in range(1, 6):
            monster = Enemy("ufo.png", randint(80, WIDTH-80), -40, 80, 50, randint(1, 5))
            monsters.add(monster)
        for i in range(1, 3):
            asteroid = Enemy("asteroid.png", randint(30, WIDTH-30), -40, 80, 50, randint(1, 7))
            asteroids.add(asteroid)     
    time.delay(50)
